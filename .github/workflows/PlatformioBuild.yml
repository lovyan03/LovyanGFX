name: PlatformIOBuild

env:
  PROJECT_DIR: examples/Test/build_test

on:
  push:
    paths:
    - '**.ino'
    - '**.cpp'
    - '**.hpp'
    - '**.h'
    - '**.c'
    - '**PlatformioBuild.yml'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.board }}@${{ matrix.platform-version }}

    runs-on: ubuntu-latest

    strategy:
      matrix:

        board:
          - esp32
          - esp32-s2
          - esp32-s3
          - m5stick-c
          - m5stack-core-esp32
          - m5stack-core2

        platform-version:
          - 1.0.6
          - 2.0.0
          - 2.0.1
          - 2.0.2
          - 2.0.3

        exclude:
          - board: esp32-s3
            platform-version: 1.0.6
          - board: esp32-s3
            platform-version: 2.0.0
          - board: esp32-s3
            platform-version: 2.0.1
          - board: esp32-s3
            platform-version: 2.0.2
          - board: esp32-s2
            platform-version: 1.0.6
          - board: esp32-s2
            platform-version: 2.0.0

        include:
          - board: esp32
          - board: esp32-s2
          - board: esp32-s3
          - board: m5stick-c
          - board: m5stack-core-esp32
          - board: m5stack-core2
          - { board: esp8266, platform-version: 3.0.0, ... }
          - { board: esp8266, platform-version: 3.1.0, ... }
          - { board: esp8266, platform-version: 3.2.0, ... }
          - { board: seeed_wio_terminal, platform-version: default, ... }
          - { board: adafruit_pybadge_m4, platform-version: default, ... }

      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Run PlatformIO

        run: |
          cd ${{ env.PROJECT_DIR }}
          pio lib -e ${{ matrix.board }}@${{ matrix.platform-version }} install --no-save file://$(realpath ../../../)
          pio run -e ${{ matrix.board }}@${{ matrix.platform-version }}
